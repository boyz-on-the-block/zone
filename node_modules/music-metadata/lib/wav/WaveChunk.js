"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var assert = require("assert");
var FourCC_1 = require("../common/FourCC");
/**
 * RIFF sub-chunk
 */
exports.Header = {
    len: 8,
    get: function (buf, off) {
        return {
            // Group-ID
            chunkID: FourCC_1.FourCcToken.get(buf, off),
            // Size
            size: buf.readUInt32LE(off + 4)
        };
    }
};
/**
 * format chunk; chunk-id is "fmt "
 * http://soundfile.sapp.org/doc/WaveFormat/
 */
var Format = /** @class */ (function () {
    function Format(header) {
        assert.ok(header.size >= 16, "16 for PCM.");
        this.len = header.size;
    }
    Format.prototype.get = function (buf, off) {
        return {
            audioFormat: buf.readUInt16LE(off),
            numChannels: buf.readUInt16LE(off + 2),
            sampleRate: buf.readUInt32LE(off + 4),
            byteRate: buf.readUInt32LE(off + 8),
            blockAlign: buf.readUInt16LE(off + 12),
            bitsPerSample: buf.readUInt16LE(off + 14)
        };
    };
    return Format;
}());
exports.Format = Format;
